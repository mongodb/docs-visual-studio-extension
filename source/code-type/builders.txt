.. _mongodb-analyzer-analyze-builders:

============================
Analyze Builders Expressions
============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

A **builder** is a class provided by the {+driver-short+} to help you construct
common operations like queries and updates.

To learn more about builders, see 
`Operations with Builders <{+driver-docs+}/fundamentals/builders/>`__ in the
{+driver-short+} documentation.

Translate into the {+query-api+}
------------------------------------

Use the {+product+} to translate your builder expressions into the {+query-api+}.
Click the following tabs to see an example of a builder expression
and its corresponding {+query-api+} translation:

.. tabs::

   .. tab:: Builders
      :tabid: builder

      .. code-block:: csharp

         var filter = Builders<Book>.Filter.Eq(b => b.Genre, genre) &
             Builders<Book>.Filter.Gte(b => b.Price, minPrice) &
             Builders<Book>.Filter.Regex(b => b.Title, titleSearchTerm);

   .. tab:: {+query-api+}
      :tabid: query-api-builders

      .. code-block:: json

         {
           "$and": [ { "Genre": genre },
             { "Price": { "$gte": minPrice } },
             { "Title": /titleSearchTerm/ } ]
         }

.. include:: /includes/variable-names.rst

Analyze Builders in Visual Studio
---------------------------------

To analyze your builder expressions in Visual Studio, perform the following actions:

1. Install the {+product+} as described in the :ref:`Install <mongodb-analyzer-install>`
   guide.
#. Write a builder expression with the {+driver-short+}
#. Move your mouse over the :guilabel:`...` annotation beneath the first
   method of your builder expression to display an information message that contains
   the {+query-api+} translation.

Simple Builder Expressions
~~~~~~~~~~~~~~~~~~~~~~~~~~

Click on the following corresponding tab to see a builder expression
with or without an information message displayed:

.. tabs::

   .. tab:: Without Information Message
      :tabid: no-message

      .. figure:: /includes/images/builder.png
         :alt: Screenshot of builder expression with an ellipsis annotation in Visual Studio.

   .. tab:: With Information Message
      :tabid: message

      .. figure:: /includes/images/builder-popup.png
         :alt: Screenshot of builder expression with an information message displayed in Visual Studio.

Track Builder Variables
~~~~~~~~~~~~~~~~~~~~~~~

The {+product+} supports builder variable tracking and composition. You can
combine multiple builder expressions with `logical operators
<https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators>`__
and view the {+query-api+} translation in the information message.

Click on the following corresponding tab to see a composed builder variable
with or without an information message displayed:

.. tabs::

   .. tab:: Without Information Message
      :tabid: no-message-variable

      .. figure:: /includes/images/builder-variable.png
         :alt: Screenshot of builder variable with an ellipsis annotation in Visual Studio.

   .. tab:: With Information Message
      :tabid: message-variable

      .. figure:: /includes/images/builder-variable-popup.png
         :alt: Screenshot of builder variable with an information message displayed in Visual Studio.
         
Fluent API
~~~~~~~~~~

The {+product+} supports the Fluent API using builder classes in the {+driver-short+}. You can
create a sequence of chained builder methods and view the {+query-api+} translation in
the information message.

Click on the following corresponding tab to see an operation using chained builder methods
with or without an information message displayed:

.. tabs::

   .. tab:: Without Information Message
      :tabid: no-message-fluent-api

      .. figure:: /includes/images/fluent-api.png
         :alt: Screenshot of Fluent API with an ellipsis annotation in Visual Studio.

   .. tab:: With Information Message
      :tabid: message-fluent-api

      .. figure:: /includes/images/fluent-api-popup.png
         :alt: Screenshot of Fluent API with an information message displayed in Visual Studio.

.. include:: /includes/error-list-window.rst