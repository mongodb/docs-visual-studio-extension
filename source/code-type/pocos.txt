.. _mongodb-analyzer-analyze-pocos:

=============
Analyze POCOs
=============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

":wikipedia:`Plain Old CLR/Class Objects <Plain_old_CLR_object>`", or **POCOs**, are
simple class objects that do not
inherit features from any framework-specific base classes or interfaces.

To learn more about POCOs, see the
`Work with POCOs <{+driver-docs+}/fundamentals/data-formats/poco/>`__ page in the
{+driver-short+} documentation.

Translate into JSON
-------------------

Use the {+product+} to translate your POCOs into JSON. The Analyzer supports ``BsonId``,
``BsonElement``, and other BSON serialization attributes.

Click the following tabs to see an example of a POCO class definition
and its corresponding JSON translation:

.. tabs::

   .. tab:: POCO
      :tabid: poco

      .. code-block:: csharp

         class Order
         {
           [BsonId]
           public int OrderNumber { get; set; }

           [BsonElement("customer_id")]
           public int CustomerId { get; set; }

           public string Date { get; set; }

           [BsonIgnore]
           public string Email { get; set; }
         }

   .. tab:: JSON 
      :tabid: json

      .. code-block:: json

         {
           "_id": "6783456",
           "customer_id": 678234),
           "Date": "06/03/2023"
         }

.. tip:: Sample Data

   The {+product+} includes predefined sample values for certain common property names.
   If you use
   these property names in your POCO, the Analyzer uses the sample values in the JSON
   output. For any property names without predefined sample values, the Analyzer uses a
   random value that matches the property's data type.

   For a list of property names with sample values, see the
   `{+product+} GitHub repo. <{+product-source-repo+}/blob/main/src/MongoDB.Analyzer/Core/Poco/Data/data.json>`__

Analyze POCOs in Visual Studio
------------------------------

To analyze your POCOs in Visual Studio, perform the following actions:

1. Install the {+product+} as described in the :ref:`Install <mongodb-analyzer-install>`
   guide.
#. Define a POCO class.
#. Move your mouse over the :guilabel:`...` annotation beneath the first
   word of your class definition to display an information message that contains
   the JSON translation.

Simple POCO Definitions
~~~~~~~~~~~~~~~~~~~~~~~

Click on the following corresponding tab to see a POCO class definition
with or without an information message displayed:

.. tabs::

   .. tab:: Without Information Message
      :tabid: no-message

      .. figure:: /includes/images/poco.png
         :alt: Screenshot of POCO definition with an ellipsis annotation in Visual Studio

   .. tab:: With Information Message
      :tabid: message

      .. figure:: /includes/images/poco-popup.png
         :alt: Screenshot of POCO definition with an information message displayed in Visual Studio
